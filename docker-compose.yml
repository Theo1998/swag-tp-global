version: '3'

services:
  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
      - URL=swag-tp.duckdns.org
      - SUBDOMAINS=wildcard
      - VALIDATION=duckdns
      - DUCKDNSTOKEN=6e0722e5-0acd-4bca-8464-0f54a76b7e81
    volumes:
      - ./appdata/swag:/config
    ports:
      - 443:443
      - 80:80
    restart: unless-stopped
  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
    volumes:
      - ./appdata/nextcloud/config:/config
      - ./appdata/nextcloud/data:/data
    depends_on:
      - db
    restart: unless-stopped
  db:
    image: lscr.io/linuxserver/mariadb
    container_name: db
    restart: unless-stopped
    environment:
      - PUID=501
      - PGID=20
      - MARIADB_ROOT_USER=root
      - MARIADB_ROOT_PASSWORD=root
      - TZ=Europe/Paris
      - MARIADB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MARIADB_DATABASE=nextcloud
      - MARIADB_USER=nextcloud
    volumes:
      - ./appdata/mariadb:/config
  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: heimdall
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
    volumes:
      - ./appdata/heimdall:/config
    restart: unless-stopped
  mysql:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
  phpmyadmin:
    image: phpmyadmin
    restart: always
    # ports:
    #   - 8080:80
    environment:
      - PMA_ARBITRARY=1
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: mmuser
      POSTGRES_PASSWORD: mmuser_password
      POSTGRES_DB: mattermost
    volumes:
      - ./appdata/postgres:/data/postgres
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./appdata/pgadmin:/var/lib/pgadmin

    # ports:
    #   - "${PGADMIN_PORT:-5050}:80"
    restart: unless-stopped
  portainer-ce:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./appdata/portainer:/data
  tuleap:
    image: tuleap/tuleap-community-edition
    container_name: tuleap
    hostname: ${TULEAP_FQDN}
    restart: always
    # ports:
    #   - "8080:80"
    #   - "4443:443"
    #   - "222:22"
    volumes:
      - ./appdata/tuleap:/data
    depends_on:
      - db
      - redis
      - mailhog
    environment:
      - TULEAP_FQDN=${TULEAP_FQDN}
      - TULEAP_SYS_DBHOST=dbtuleap
      - TULEAP_SYS_DBPASSWD=${TULEAP_SYS_DBPASSWD}
      - SITE_ADMINISTRATOR_PASSWORD=${SITE_ADMINISTRATOR_PASSWORD}
      - DB_ADMIN_USER=root
      - DB_ADMIN_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TULEAP_FPM_SESSION_MODE=redis
      - TULEAP_REDIS_SERVER=redis
  dbtuleap:
    image: mysql:5.7
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--sql-mode=NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"]
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./appdata/dbtuleap:/var/lib/mysql
  redis:
    image: redis:6
    container_name: redis
    volumes:
      - ./appdata/redis:/data
    command: redis-server --appendonly yes --auto-aof-rewrite-percentage 20 --auto-aof-rewrite-min-size 200kb
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
  app:
    build: ./app
    container_name: app
    restart: unless-stopped
  
  openldap:
    image: osixia/openldap:1.5.0
    container_name: openldap
    volumes:
      - ./appdata/ldap/db:/var/lib/ldap
      - ./appdata/ldap/config:/etc/ldap/slapd.d
    environment:
      - LDAP_ORGANISATION=example-org
      - LDAP_DOMAIN=example.org
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_CONFIG_PASSWORD=config
      - LDAP_RFC2307BIS_SCHEMA=true
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=true
      - LDAP_TLS_VERIFY_CLIENT=never

  openldapui:
    image: wheelybird/ldap-user-manager:v1.5
    container_name: openldap-ui
    environment:
      - LDAP_URI=ldap://openldap
      - LDAP_BASE_DN=dc=example,dc=org
      - LDAP_REQUIRE_STARTTLS=FALSE
      - LDAP_ADMINS_GROUP=admins
      - LDAP_ADMIN_BIND_DN=cn=admin,dc=example,dc=org
      - LDAP_ADMIN_BIND_PWD=admin
      - LDAP_IGNORE_CERT_ERRORS=true
      - NO_HTTPS=TRUE
      - PASSWORD_HASH=SSHA
      - SERVER_HOSTNAME=localhost:18080
    depends_on:
      - openldap
  plik:
    image: rootgg/plik:latest
    container_name: plik
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
    restart: "unless-stopped"

  wordpress:
    image: wordpress:latest
    container_name: wordpress
    volumes:
      - ./wp_data:/var/www/html
    restart: always
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=root
      - WORDPRESS_DB_PASSWORD=
      - WORDPRESS_DB_NAME=wordpress

  gitea:
    image: gitea/gitea
    container_name: gitea
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
      - DB_HOST=db
      - DB_NAME=gitea
      - DB_USER=root
      - DB_PASSWD=
    restart: always
    volumes:
      - ./appdata/gitea:/data
      
  bookstack:
    image: lscr.io/linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=501
      - PGID=20
      - TZ=Europe/Paris
      - DB_HOST=db
      - DB_USER=root
      - DB_PASS=
      - DB_DATABASE=bookstack
    volumes:
      - ./appdata/bookstack:/config
    restart: unless-stopped

    # ports:
    #   - 9050:9000
  # mattermost:
  #   build:
  #     context: mattermost_app
  #   restart: unless-stopped
  #   volumes:
  #     - ./appdata/mattermost/config:/mattermost/config:rw
  #     - ./appdata/mattermost/data:/mattermost/data:rw
  #     - ./appdata/mattermost/logs:/mattermost/logs:rw
  #     - ./appdata/mattermost/plugins:/mattermost/plugins:rw
  #     - ./appdata/mattermost/client-plugins:/mattermost/client/plugins:rw
  #     - /etc/localtime:/etc/localtime:ro
  #   environment:
  #     - MM_USERNAME=mmuser
  #     - MM_PASSWORD=mmuser_password
  #     - MM_DBNAME=mattermost
  #     - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@postgres:5432/mattermost?sslmode=disable&connect_timeout=10

  # mattermost_web:
  #   build: mattermost_web
    # ports:
    #   - "8055:8080"
    #   - "4478:8443"
    # read_only: true
    # restart: unless-stopped
    # volumes:
    #   - ./appdata/mattermost/cert:/cert:ro
    #   - /etc/localtime:/etc/localtime:ro
    # cap_drop:
    #   - ALL
  
